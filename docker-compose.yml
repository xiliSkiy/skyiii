version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: skyeye-postgres
    environment:
      POSTGRES_DB: skyeye_auth
      POSTGRES_USER: skyeye
      POSTGRES_PASSWORD: skyeye123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - skyeye-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: skyeye-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - skyeye-network

  # RabbitMQ Message Queue
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: skyeye-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: skyeye
      RABBITMQ_DEFAULT_PASS: skyeye123
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - skyeye-network

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: skyeye-minio
    environment:
      MINIO_ROOT_USER: skyeye
      MINIO_ROOT_PASSWORD: skyeye123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - skyeye-network

  # Elasticsearch
  elasticsearch:
    image: elasticsearch:8.11.0
    container_name: skyeye-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - skyeye-network

  # Kibana
  kibana:
    image: kibana:8.11.0
    container_name: skyeye-kibana
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - skyeye-network

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: skyeye-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - skyeye-network

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: skyeye-grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: skyeye123
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - skyeye-network

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
  minio_data:
  elasticsearch_data:
  prometheus_data:
  grafana_data:

networks:
  skyeye-network:
    driver: bridge